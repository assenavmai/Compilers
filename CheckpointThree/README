README FOR COMPILERS: CIS*4650
---------------------------------
Vanessa White, 0832498
Jasmine Kandloosi, 0846091

CONTENTS OF THIS FILE
----------------------

* Introduction
* Version Control
* Requirements
* Build & Run
* Testing


INTRODUCTION
-------------

This projects is checkpoint 1 of 3 for our fourth year compilers class, CIS*4650. For this checkpoint, we have to create a scanner and parser to the CMinus specification. After building these two components, a syntax tree is built and sent to stdout.


VERSION CONTROL
----------------

We used GitHub for version control.

The program handed in for submission can be found at: http://github.com/assenavmai/Compilers/ in the 'recovery' branch

REQUIREMENTS
-------------

This program requires:

    * lex
    * yacc
    * gcc

BUILD & RUN
------------

    1) type 'make' to compile the program
    2) type ./cm -a [filename].cm to compile a CMinus program and output it's contents into an '.abs' file
    3) The abstract syntax tree can be printed out onto stdout if the STDOUT flag is changed within main.

TESTING
----------

Test files are provided to run the program. These files include:

	* 1.cm: No errors in the file.
	* 2.cm: incorrect multiplcation errors and relational errors
	* 3.cm: unknown function type and unknown symbols
	* 4.cm: Tests random invalid characters within the file, 
	* 5.cm: 	
		* incorrect return statement (line 27)
		* incorrect if-else statment (line 15)
		* incorrect call statement (line 36)
		* additonal unknown symbols found in the code (line 16, 22, 32)
		* unknown function type (line 24)
		* incorrect addition operators (line 31)

To test these files simply compile with 'make' and run with ./cm -a [1,2,3,4,5].cm
A corresponding [1,2,3,4,5].abs file will be produced.

