Terminals unused in grammar

   ERROR


Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: decl_list decl
    3          | decl

    4 decl: var_decl
    5     | fun_decl
    6     | error

    7 $@1: %empty

    8 var_decl: type_spec ID $@1 SEMI

    9 $@2: %empty

   10 var_decl: type_spec ID $@2 LBRAC NUM RBRAC SEMI

   11 type_spec: INT
   12          | VOID

   13 @3: %empty

   14 fun_decl: type_spec ID @3 LPAREN params RPAREN compound_stmt
   15         | LPAREN error RPAREN compound_stmt

   16 params: param_list
   17       | VOID

   18 param_list: param_list COMMA param
   19           | param
   20           | error

   21 param: type_spec ID

   22 $@4: %empty

   23 param: type_spec ID $@4 LBRAC RBRAC

   24 $@5: %empty

   25 compound_stmt: LCURL $@5 local_decl stmt_list RCURL
   26              | LCURL error RCURL

   27 local_decl: local_decl var_decl
   28           | epsilon

   29 stmt_list: stmt_list stmt
   30          | epsilon

   31 stmt: expr_stmt
   32     | compound_stmt
   33     | select_stmt
   34     | iter_stmt
   35     | return_stmt

   36 expr_stmt: expr SEMI
   37          | SEMI

   38 select_stmt: IF LPAREN expr RPAREN stmt
   39            | IF LPAREN expr RPAREN stmt ELSE stmt
   40            | IF LPAREN error RPAREN

   41 iter_stmt: WHILE LPAREN expr RPAREN stmt
   42          | WHILE LPAREN error RPAREN

   43 return_stmt: RETURN SEMI
   44            | RETURN expr SEMI
   45            | RETURN error SEMI

   46 expr: var EQ expr
   47     | simple_expr

   48 var: ID

   49 $@6: %empty

   50 var: ID $@6 LBRAC expr RBRAC

   51 simple_expr: additive_expr relop additive_expr
   52            | additive_expr

   53 relop: LTEQ
   54      | LT
   55      | GT
   56      | GTEQ
   57      | DOUBEQ
   58      | NEQ

   59 additive_expr: additive_expr addop term
   60              | term

   61 addop: PLUS
   62      | MINUS

   63 term: term mulop factor
   64     | factor

   65 mulop: MULT
   66      | DIV

   67 factor: LPAREN expr RPAREN
   68       | var
   69       | call
   70       | NUM

   71 $@7: %empty

   72 call: ID $@7 LPAREN args RPAREN

   73 args: arg_list
   74     | epsilon

   75 arg_list: arg_list COMMA expr
   76         | expr

   77 epsilon: %empty


Terminals, with rules where they appear

$end (0) 0
error (256) 6 15 20 26 40 42 45
IF (258) 38 39 40
ELSE (259) 39
INT (260) 11
RETURN (261) 43 44 45
VOID (262) 12 17
WHILE (263) 41 42
ID (264) 8 10 14 21 23 48 50 72
NUM (265) 10 70
PLUS (266) 61
MINUS (267) 62
MULT (268) 65
DIV (269) 66
LT (270) 54
GT (271) 55
LTEQ (272) 53
GTEQ (273) 56
DOUBEQ (274) 57
NEQ (275) 58
EQ (276) 46
SEMI (277) 8 10 36 37 43 44 45
COMMA (278) 18 75
LPAREN (279) 14 15 38 39 40 41 42 67 72
RPAREN (280) 14 15 38 39 40 41 42 67 72
LBRAC (281) 10 23 50
RBRAC (282) 10 23 50
LCURL (283) 25 26
RCURL (284) 25 26
ERROR (285)
NO_ELSE (286)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
decl_list (34)
    on left: 2 3, on right: 1 2
decl (35)
    on left: 4 5 6, on right: 2 3
var_decl (36)
    on left: 8 10, on right: 4 27
$@1 (37)
    on left: 7, on right: 8
$@2 (38)
    on left: 9, on right: 10
type_spec (39)
    on left: 11 12, on right: 8 10 14 21 23
fun_decl (40)
    on left: 14 15, on right: 5
@3 (41)
    on left: 13, on right: 14
params (42)
    on left: 16 17, on right: 14
param_list (43)
    on left: 18 19 20, on right: 16 18
param (44)
    on left: 21 23, on right: 18 19
$@4 (45)
    on left: 22, on right: 23
compound_stmt (46)
    on left: 25 26, on right: 14 15 32
$@5 (47)
    on left: 24, on right: 25
local_decl (48)
    on left: 27 28, on right: 25 27
stmt_list (49)
    on left: 29 30, on right: 25 29
stmt (50)
    on left: 31 32 33 34 35, on right: 29 38 39 41
expr_stmt (51)
    on left: 36 37, on right: 31
select_stmt (52)
    on left: 38 39 40, on right: 33
iter_stmt (53)
    on left: 41 42, on right: 34
return_stmt (54)
    on left: 43 44 45, on right: 35
expr (55)
    on left: 46 47, on right: 36 38 39 41 44 46 50 67 75 76
var (56)
    on left: 48 50, on right: 46 68
$@6 (57)
    on left: 49, on right: 50
simple_expr (58)
    on left: 51 52, on right: 47
relop (59)
    on left: 53 54 55 56 57 58, on right: 51
additive_expr (60)
    on left: 59 60, on right: 51 52 59
addop (61)
    on left: 61 62, on right: 59
term (62)
    on left: 63 64, on right: 59 60 63
mulop (63)
    on left: 65 66, on right: 63
factor (64)
    on left: 67 68 69 70, on right: 63 64
call (65)
    on left: 72, on right: 69
$@7 (66)
    on left: 71, on right: 72
args (67)
    on left: 73 74, on right: 72
arg_list (68)
    on left: 75 76, on right: 73 75
epsilon (69)
    on left: 77, on right: 28 30 74


State 0

    0 $accept: . program $end

    error   shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    LPAREN  shift, and go to state 4

    program    go to state 5
    decl_list  go to state 6
    decl       go to state 7
    var_decl   go to state 8
    type_spec  go to state 9
    fun_decl   go to state 10


State 1

    6 decl: error .

    $default  reduce using rule 6 (decl)


State 2

   11 type_spec: INT .

    $default  reduce using rule 11 (type_spec)


State 3

   12 type_spec: VOID .

    $default  reduce using rule 12 (type_spec)


State 4

   15 fun_decl: LPAREN . error RPAREN compound_stmt

    error  shift, and go to state 11


State 5

    0 $accept: program . $end

    $end  shift, and go to state 12


State 6

    1 program: decl_list .
    2 decl_list: decl_list . decl

    error   shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    LPAREN  shift, and go to state 4

    $end  reduce using rule 1 (program)

    decl       go to state 13
    var_decl   go to state 8
    type_spec  go to state 9
    fun_decl   go to state 10


State 7

    3 decl_list: decl .

    $default  reduce using rule 3 (decl_list)


State 8

    4 decl: var_decl .

    $default  reduce using rule 4 (decl)


State 9

    8 var_decl: type_spec . ID $@1 SEMI
   10         | type_spec . ID $@2 LBRAC NUM RBRAC SEMI
   14 fun_decl: type_spec . ID @3 LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 14


State 10

    5 decl: fun_decl .

    $default  reduce using rule 5 (decl)


State 11

   15 fun_decl: LPAREN error . RPAREN compound_stmt

    RPAREN  shift, and go to state 15


State 12

    0 $accept: program $end .

    $default  accept


State 13

    2 decl_list: decl_list decl .

    $default  reduce using rule 2 (decl_list)


State 14

    8 var_decl: type_spec ID . $@1 SEMI
   10         | type_spec ID . $@2 LBRAC NUM RBRAC SEMI
   14 fun_decl: type_spec ID . @3 LPAREN params RPAREN compound_stmt

    LPAREN    reduce using rule 13 (@3)
    LBRAC     reduce using rule 9 ($@2)
    $default  reduce using rule 7 ($@1)

    $@1  go to state 16
    $@2  go to state 17
    @3   go to state 18


State 15

   15 fun_decl: LPAREN error RPAREN . compound_stmt

    LCURL  shift, and go to state 19

    compound_stmt  go to state 20


State 16

    8 var_decl: type_spec ID $@1 . SEMI

    SEMI  shift, and go to state 21


State 17

   10 var_decl: type_spec ID $@2 . LBRAC NUM RBRAC SEMI

    LBRAC  shift, and go to state 22


State 18

   14 fun_decl: type_spec ID @3 . LPAREN params RPAREN compound_stmt

    LPAREN  shift, and go to state 23


State 19

   25 compound_stmt: LCURL . $@5 local_decl stmt_list RCURL
   26              | LCURL . error RCURL

    error  shift, and go to state 24

    IF      reduce using rule 24 ($@5)
    INT     reduce using rule 24 ($@5)
    RETURN  reduce using rule 24 ($@5)
    VOID    reduce using rule 24 ($@5)
    WHILE   reduce using rule 24 ($@5)
    ID      reduce using rule 24 ($@5)
    NUM     reduce using rule 24 ($@5)
    SEMI    reduce using rule 24 ($@5)
    LPAREN  reduce using rule 24 ($@5)
    LCURL   reduce using rule 24 ($@5)
    RCURL   reduce using rule 24 ($@5)

    $@5  go to state 25


State 20

   15 fun_decl: LPAREN error RPAREN compound_stmt .

    $default  reduce using rule 15 (fun_decl)


State 21

    8 var_decl: type_spec ID $@1 SEMI .

    $default  reduce using rule 8 (var_decl)


State 22

   10 var_decl: type_spec ID $@2 LBRAC . NUM RBRAC SEMI

    NUM  shift, and go to state 26


State 23

   14 fun_decl: type_spec ID @3 LPAREN . params RPAREN compound_stmt

    error  shift, and go to state 27
    INT    shift, and go to state 2
    VOID   shift, and go to state 28

    type_spec   go to state 29
    params      go to state 30
    param_list  go to state 31
    param       go to state 32


State 24

   26 compound_stmt: LCURL error . RCURL

    RCURL  shift, and go to state 33


State 25

   25 compound_stmt: LCURL $@5 . local_decl stmt_list RCURL

    $default  reduce using rule 77 (epsilon)

    local_decl  go to state 34
    epsilon     go to state 35


State 26

   10 var_decl: type_spec ID $@2 LBRAC NUM . RBRAC SEMI

    RBRAC  shift, and go to state 36


State 27

   20 param_list: error .

    $default  reduce using rule 20 (param_list)


State 28

   12 type_spec: VOID .
   17 params: VOID .

    RPAREN    reduce using rule 17 (params)
    $default  reduce using rule 12 (type_spec)


State 29

   21 param: type_spec . ID
   23      | type_spec . ID $@4 LBRAC RBRAC

    ID  shift, and go to state 37


State 30

   14 fun_decl: type_spec ID @3 LPAREN params . RPAREN compound_stmt

    RPAREN  shift, and go to state 38


State 31

   16 params: param_list .
   18 param_list: param_list . COMMA param

    COMMA  shift, and go to state 39

    $default  reduce using rule 16 (params)


State 32

   19 param_list: param .

    $default  reduce using rule 19 (param_list)


State 33

   26 compound_stmt: LCURL error RCURL .

    $default  reduce using rule 26 (compound_stmt)


State 34

   25 compound_stmt: LCURL $@5 local_decl . stmt_list RCURL
   27 local_decl: local_decl . var_decl

    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    $default  reduce using rule 77 (epsilon)

    var_decl   go to state 40
    type_spec  go to state 41
    stmt_list  go to state 42
    epsilon    go to state 43


State 35

   28 local_decl: epsilon .

    $default  reduce using rule 28 (local_decl)


State 36

   10 var_decl: type_spec ID $@2 LBRAC NUM RBRAC . SEMI

    SEMI  shift, and go to state 44


State 37

   21 param: type_spec ID .
   23      | type_spec ID . $@4 LBRAC RBRAC

    LBRAC     reduce using rule 22 ($@4)
    $default  reduce using rule 21 (param)

    $@4  go to state 45


State 38

   14 fun_decl: type_spec ID @3 LPAREN params RPAREN . compound_stmt

    LCURL  shift, and go to state 19

    compound_stmt  go to state 46


State 39

   18 param_list: param_list COMMA . param

    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    type_spec  go to state 29
    param      go to state 47


State 40

   27 local_decl: local_decl var_decl .

    $default  reduce using rule 27 (local_decl)


State 41

    8 var_decl: type_spec . ID $@1 SEMI
   10         | type_spec . ID $@2 LBRAC NUM RBRAC SEMI

    ID  shift, and go to state 48


State 42

   25 compound_stmt: LCURL $@5 local_decl stmt_list . RCURL
   29 stmt_list: stmt_list . stmt

    IF      shift, and go to state 49
    RETURN  shift, and go to state 50
    WHILE   shift, and go to state 51
    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SEMI    shift, and go to state 54
    LPAREN  shift, and go to state 55
    LCURL   shift, and go to state 19
    RCURL   shift, and go to state 56

    compound_stmt  go to state 57
    stmt           go to state 58
    expr_stmt      go to state 59
    select_stmt    go to state 60
    iter_stmt      go to state 61
    return_stmt    go to state 62
    expr           go to state 63
    var            go to state 64
    simple_expr    go to state 65
    additive_expr  go to state 66
    term           go to state 67
    factor         go to state 68
    call           go to state 69


State 43

   30 stmt_list: epsilon .

    $default  reduce using rule 30 (stmt_list)


State 44

   10 var_decl: type_spec ID $@2 LBRAC NUM RBRAC SEMI .

    $default  reduce using rule 10 (var_decl)


State 45

   23 param: type_spec ID $@4 . LBRAC RBRAC

    LBRAC  shift, and go to state 70


State 46

   14 fun_decl: type_spec ID @3 LPAREN params RPAREN compound_stmt .

    $default  reduce using rule 14 (fun_decl)


State 47

   18 param_list: param_list COMMA param .

    $default  reduce using rule 18 (param_list)


State 48

    8 var_decl: type_spec ID . $@1 SEMI
   10         | type_spec ID . $@2 LBRAC NUM RBRAC SEMI

    LBRAC     reduce using rule 9 ($@2)
    $default  reduce using rule 7 ($@1)

    $@1  go to state 16
    $@2  go to state 17


State 49

   38 select_stmt: IF . LPAREN expr RPAREN stmt
   39            | IF . LPAREN expr RPAREN stmt ELSE stmt
   40            | IF . LPAREN error RPAREN

    LPAREN  shift, and go to state 71


State 50

   43 return_stmt: RETURN . SEMI
   44            | RETURN . expr SEMI
   45            | RETURN . error SEMI

    error   shift, and go to state 72
    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SEMI    shift, and go to state 73
    LPAREN  shift, and go to state 55

    expr           go to state 74
    var            go to state 64
    simple_expr    go to state 65
    additive_expr  go to state 66
    term           go to state 67
    factor         go to state 68
    call           go to state 69


State 51

   41 iter_stmt: WHILE . LPAREN expr RPAREN stmt
   42          | WHILE . LPAREN error RPAREN

    LPAREN  shift, and go to state 75


State 52

   48 var: ID .
   50    | ID . $@6 LBRAC expr RBRAC
   72 call: ID . $@7 LPAREN args RPAREN

    LPAREN    reduce using rule 71 ($@7)
    LBRAC     reduce using rule 49 ($@6)
    $default  reduce using rule 48 (var)

    $@6  go to state 76
    $@7  go to state 77


State 53

   70 factor: NUM .

    $default  reduce using rule 70 (factor)


State 54

   37 expr_stmt: SEMI .

    $default  reduce using rule 37 (expr_stmt)


State 55

   67 factor: LPAREN . expr RPAREN

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    LPAREN  shift, and go to state 55

    expr           go to state 78
    var            go to state 64
    simple_expr    go to state 65
    additive_expr  go to state 66
    term           go to state 67
    factor         go to state 68
    call           go to state 69


State 56

   25 compound_stmt: LCURL $@5 local_decl stmt_list RCURL .

    $default  reduce using rule 25 (compound_stmt)


State 57

   32 stmt: compound_stmt .

    $default  reduce using rule 32 (stmt)


State 58

   29 stmt_list: stmt_list stmt .

    $default  reduce using rule 29 (stmt_list)


State 59

   31 stmt: expr_stmt .

    $default  reduce using rule 31 (stmt)


State 60

   33 stmt: select_stmt .

    $default  reduce using rule 33 (stmt)


State 61

   34 stmt: iter_stmt .

    $default  reduce using rule 34 (stmt)


State 62

   35 stmt: return_stmt .

    $default  reduce using rule 35 (stmt)


State 63

   36 expr_stmt: expr . SEMI

    SEMI  shift, and go to state 79


State 64

   46 expr: var . EQ expr
   68 factor: var .

    EQ  shift, and go to state 80

    $default  reduce using rule 68 (factor)


State 65

   47 expr: simple_expr .

    $default  reduce using rule 47 (expr)


State 66

   51 simple_expr: additive_expr . relop additive_expr
   52            | additive_expr .
   59 additive_expr: additive_expr . addop term

    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    LT      shift, and go to state 83
    GT      shift, and go to state 84
    LTEQ    shift, and go to state 85
    GTEQ    shift, and go to state 86
    DOUBEQ  shift, and go to state 87
    NEQ     shift, and go to state 88

    $default  reduce using rule 52 (simple_expr)

    relop  go to state 89
    addop  go to state 90


State 67

   60 additive_expr: term .
   63 term: term . mulop factor

    MULT  shift, and go to state 91
    DIV   shift, and go to state 92

    $default  reduce using rule 60 (additive_expr)

    mulop  go to state 93


State 68

   64 term: factor .

    $default  reduce using rule 64 (term)


State 69

   69 factor: call .

    $default  reduce using rule 69 (factor)


State 70

   23 param: type_spec ID $@4 LBRAC . RBRAC

    RBRAC  shift, and go to state 94


State 71

   38 select_stmt: IF LPAREN . expr RPAREN stmt
   39            | IF LPAREN . expr RPAREN stmt ELSE stmt
   40            | IF LPAREN . error RPAREN

    error   shift, and go to state 95
    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    LPAREN  shift, and go to state 55

    expr           go to state 96
    var            go to state 64
    simple_expr    go to state 65
    additive_expr  go to state 66
    term           go to state 67
    factor         go to state 68
    call           go to state 69


State 72

   45 return_stmt: RETURN error . SEMI

    SEMI  shift, and go to state 97


State 73

   43 return_stmt: RETURN SEMI .

    $default  reduce using rule 43 (return_stmt)


State 74

   44 return_stmt: RETURN expr . SEMI

    SEMI  shift, and go to state 98


State 75

   41 iter_stmt: WHILE LPAREN . expr RPAREN stmt
   42          | WHILE LPAREN . error RPAREN

    error   shift, and go to state 99
    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    LPAREN  shift, and go to state 55

    expr           go to state 100
    var            go to state 64
    simple_expr    go to state 65
    additive_expr  go to state 66
    term           go to state 67
    factor         go to state 68
    call           go to state 69


State 76

   50 var: ID $@6 . LBRAC expr RBRAC

    LBRAC  shift, and go to state 101


State 77

   72 call: ID $@7 . LPAREN args RPAREN

    LPAREN  shift, and go to state 102


State 78

   67 factor: LPAREN expr . RPAREN

    RPAREN  shift, and go to state 103


State 79

   36 expr_stmt: expr SEMI .

    $default  reduce using rule 36 (expr_stmt)


State 80

   46 expr: var EQ . expr

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    LPAREN  shift, and go to state 55

    expr           go to state 104
    var            go to state 64
    simple_expr    go to state 65
    additive_expr  go to state 66
    term           go to state 67
    factor         go to state 68
    call           go to state 69


State 81

   61 addop: PLUS .

    $default  reduce using rule 61 (addop)


State 82

   62 addop: MINUS .

    $default  reduce using rule 62 (addop)


State 83

   54 relop: LT .

    $default  reduce using rule 54 (relop)


State 84

   55 relop: GT .

    $default  reduce using rule 55 (relop)


State 85

   53 relop: LTEQ .

    $default  reduce using rule 53 (relop)


State 86

   56 relop: GTEQ .

    $default  reduce using rule 56 (relop)


State 87

   57 relop: DOUBEQ .

    $default  reduce using rule 57 (relop)


State 88

   58 relop: NEQ .

    $default  reduce using rule 58 (relop)


State 89

   51 simple_expr: additive_expr relop . additive_expr

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    LPAREN  shift, and go to state 55

    var            go to state 105
    additive_expr  go to state 106
    term           go to state 67
    factor         go to state 68
    call           go to state 69


State 90

   59 additive_expr: additive_expr addop . term

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    LPAREN  shift, and go to state 55

    var     go to state 105
    term    go to state 107
    factor  go to state 68
    call    go to state 69


State 91

   65 mulop: MULT .

    $default  reduce using rule 65 (mulop)


State 92

   66 mulop: DIV .

    $default  reduce using rule 66 (mulop)


State 93

   63 term: term mulop . factor

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    LPAREN  shift, and go to state 55

    var     go to state 105
    factor  go to state 108
    call    go to state 69


State 94

   23 param: type_spec ID $@4 LBRAC RBRAC .

    $default  reduce using rule 23 (param)


State 95

   40 select_stmt: IF LPAREN error . RPAREN

    RPAREN  shift, and go to state 109


State 96

   38 select_stmt: IF LPAREN expr . RPAREN stmt
   39            | IF LPAREN expr . RPAREN stmt ELSE stmt

    RPAREN  shift, and go to state 110


State 97

   45 return_stmt: RETURN error SEMI .

    $default  reduce using rule 45 (return_stmt)


State 98

   44 return_stmt: RETURN expr SEMI .

    $default  reduce using rule 44 (return_stmt)


State 99

   42 iter_stmt: WHILE LPAREN error . RPAREN

    RPAREN  shift, and go to state 111


State 100

   41 iter_stmt: WHILE LPAREN expr . RPAREN stmt

    RPAREN  shift, and go to state 112


State 101

   50 var: ID $@6 LBRAC . expr RBRAC

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    LPAREN  shift, and go to state 55

    expr           go to state 113
    var            go to state 64
    simple_expr    go to state 65
    additive_expr  go to state 66
    term           go to state 67
    factor         go to state 68
    call           go to state 69


State 102

   72 call: ID $@7 LPAREN . args RPAREN

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    LPAREN  shift, and go to state 55

    $default  reduce using rule 77 (epsilon)

    expr           go to state 114
    var            go to state 64
    simple_expr    go to state 65
    additive_expr  go to state 66
    term           go to state 67
    factor         go to state 68
    call           go to state 69
    args           go to state 115
    arg_list       go to state 116
    epsilon        go to state 117


State 103

   67 factor: LPAREN expr RPAREN .

    $default  reduce using rule 67 (factor)


State 104

   46 expr: var EQ expr .

    $default  reduce using rule 46 (expr)


State 105

   68 factor: var .

    $default  reduce using rule 68 (factor)


State 106

   51 simple_expr: additive_expr relop additive_expr .
   59 additive_expr: additive_expr . addop term

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82

    $default  reduce using rule 51 (simple_expr)

    addop  go to state 90


State 107

   59 additive_expr: additive_expr addop term .
   63 term: term . mulop factor

    MULT  shift, and go to state 91
    DIV   shift, and go to state 92

    $default  reduce using rule 59 (additive_expr)

    mulop  go to state 93


State 108

   63 term: term mulop factor .

    $default  reduce using rule 63 (term)


State 109

   40 select_stmt: IF LPAREN error RPAREN .

    $default  reduce using rule 40 (select_stmt)


State 110

   38 select_stmt: IF LPAREN expr RPAREN . stmt
   39            | IF LPAREN expr RPAREN . stmt ELSE stmt

    IF      shift, and go to state 49
    RETURN  shift, and go to state 50
    WHILE   shift, and go to state 51
    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SEMI    shift, and go to state 54
    LPAREN  shift, and go to state 55
    LCURL   shift, and go to state 19

    compound_stmt  go to state 57
    stmt           go to state 118
    expr_stmt      go to state 59
    select_stmt    go to state 60
    iter_stmt      go to state 61
    return_stmt    go to state 62
    expr           go to state 63
    var            go to state 64
    simple_expr    go to state 65
    additive_expr  go to state 66
    term           go to state 67
    factor         go to state 68
    call           go to state 69


State 111

   42 iter_stmt: WHILE LPAREN error RPAREN .

    $default  reduce using rule 42 (iter_stmt)


State 112

   41 iter_stmt: WHILE LPAREN expr RPAREN . stmt

    IF      shift, and go to state 49
    RETURN  shift, and go to state 50
    WHILE   shift, and go to state 51
    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SEMI    shift, and go to state 54
    LPAREN  shift, and go to state 55
    LCURL   shift, and go to state 19

    compound_stmt  go to state 57
    stmt           go to state 119
    expr_stmt      go to state 59
    select_stmt    go to state 60
    iter_stmt      go to state 61
    return_stmt    go to state 62
    expr           go to state 63
    var            go to state 64
    simple_expr    go to state 65
    additive_expr  go to state 66
    term           go to state 67
    factor         go to state 68
    call           go to state 69


State 113

   50 var: ID $@6 LBRAC expr . RBRAC

    RBRAC  shift, and go to state 120


State 114

   76 arg_list: expr .

    $default  reduce using rule 76 (arg_list)


State 115

   72 call: ID $@7 LPAREN args . RPAREN

    RPAREN  shift, and go to state 121


State 116

   73 args: arg_list .
   75 arg_list: arg_list . COMMA expr

    COMMA  shift, and go to state 122

    $default  reduce using rule 73 (args)


State 117

   74 args: epsilon .

    $default  reduce using rule 74 (args)


State 118

   38 select_stmt: IF LPAREN expr RPAREN stmt .
   39            | IF LPAREN expr RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 123

    $default  reduce using rule 38 (select_stmt)


State 119

   41 iter_stmt: WHILE LPAREN expr RPAREN stmt .

    $default  reduce using rule 41 (iter_stmt)


State 120

   50 var: ID $@6 LBRAC expr RBRAC .

    $default  reduce using rule 50 (var)


State 121

   72 call: ID $@7 LPAREN args RPAREN .

    $default  reduce using rule 72 (call)


State 122

   75 arg_list: arg_list COMMA . expr

    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    LPAREN  shift, and go to state 55

    expr           go to state 124
    var            go to state 64
    simple_expr    go to state 65
    additive_expr  go to state 66
    term           go to state 67
    factor         go to state 68
    call           go to state 69


State 123

   39 select_stmt: IF LPAREN expr RPAREN stmt ELSE . stmt

    IF      shift, and go to state 49
    RETURN  shift, and go to state 50
    WHILE   shift, and go to state 51
    ID      shift, and go to state 52
    NUM     shift, and go to state 53
    SEMI    shift, and go to state 54
    LPAREN  shift, and go to state 55
    LCURL   shift, and go to state 19

    compound_stmt  go to state 57
    stmt           go to state 125
    expr_stmt      go to state 59
    select_stmt    go to state 60
    iter_stmt      go to state 61
    return_stmt    go to state 62
    expr           go to state 63
    var            go to state 64
    simple_expr    go to state 65
    additive_expr  go to state 66
    term           go to state 67
    factor         go to state 68
    call           go to state 69


State 124

   75 arg_list: arg_list COMMA expr .

    $default  reduce using rule 75 (arg_list)


State 125

   39 select_stmt: IF LPAREN expr RPAREN stmt ELSE stmt .

    $default  reduce using rule 39 (select_stmt)
