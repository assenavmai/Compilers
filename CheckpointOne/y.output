Terminals unused in grammar

   ERROR


State 100 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: decl_list decl
    3          | decl

    4 decl: var_decl
    5     | fun_decl

    6 var_decl: type_spec ID SEMI
    7         | type_spec ID LBRAC NUM RBRAC SEMI

    8 type_spec: INT
    9          | VOID

   10 fun_decl: type_spec ID LPAREN params RPAREN compound_stmt

   11 params: param_list
   12       | VOID

   13 param_list: param_list COMMA param
   14           | param

   15 param: type_spec ID
   16      | type_spec ID LBRAC RBRAC

   17 compound_stmt: LCURL local_decl stmt_list RCURL

   18 local_decl: local_decl var_decl
   19           | epsilon

   20 stmt_list: stmt_list stmt
   21          | epsilon

   22 stmt: expr_stmt
   23     | compound_stmt
   24     | select_stmt
   25     | iter_stmt
   26     | return_stmt

   27 expr_stmt: expr SEMI
   28          | SEMI

   29 select_stmt: IF LPAREN expr RPAREN stmt
   30            | IF LPAREN expr RPAREN stmt ELSE stmt

   31 iter_stmt: WHILE LPAREN expr RPAREN stmt

   32 return_stmt: RETURN SEMI
   33            | RETURN expr SEMI

   34 expr: var EQ expr
   35     | simple_expr

   36 var: ID
   37    | ID LBRAC expr RBRAC

   38 simple_expr: additive_expr relop additive_expr
   39            | additive_expr

   40 relop: LTEQ
   41      | LT
   42      | GT
   43      | GTEQ
   44      | DOUBEQ
   45      | NEQ

   46 additive_expr: additive_expr addop term
   47              | term

   48 addop: PLUS
   49      | MINUS

   50 term: term mulop factor
   51     | factor

   52 mulop: MULT
   53      | DIV

   54 factor: LPAREN expr RPAREN
   55       | var
   56       | call
   57       | NUM

   58 call: ID LPAREN args RPAREN

   59 args: arg_list
   60     | epsilon

   61 arg_list: arg_list COMMA expr
   62         | expr

   63 epsilon: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
ELSE (258) 30
IF (259) 29 30
INT (260) 8
RETURN (261) 32 33
VOID (262) 9 12
WHILE (263) 31
ID (264) 6 7 10 15 16 36 37 58
NUM (265) 7 57
PLUS (266) 48
MINUS (267) 49
MULT (268) 52
DIV (269) 53
LT (270) 41
GT (271) 42
LTEQ (272) 40
GTEQ (273) 43
DOUBEQ (274) 44
NEQ (275) 45
EQ (276) 34
SEMI (277) 6 7 27 28 32 33
COMMA (278) 13 61
LPAREN (279) 10 29 30 31 54 58
RPAREN (280) 10 29 30 31 54 58
LBRAC (281) 7 16 37
RBRAC (282) 7 16 37
LCURL (283) 17
RCURL (284) 17
ERROR (285)


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
program (32)
    on left: 1, on right: 0
decl_list (33)
    on left: 2 3, on right: 1 2
decl (34)
    on left: 4 5, on right: 2 3
var_decl (35)
    on left: 6 7, on right: 4 18
type_spec (36)
    on left: 8 9, on right: 6 7 10 15 16
fun_decl (37)
    on left: 10, on right: 5
params (38)
    on left: 11 12, on right: 10
param_list (39)
    on left: 13 14, on right: 11 13
param (40)
    on left: 15 16, on right: 13 14
compound_stmt (41)
    on left: 17, on right: 10 23
local_decl (42)
    on left: 18 19, on right: 17 18
stmt_list (43)
    on left: 20 21, on right: 17 20
stmt (44)
    on left: 22 23 24 25 26, on right: 20 29 30 31
expr_stmt (45)
    on left: 27 28, on right: 22
select_stmt (46)
    on left: 29 30, on right: 24
iter_stmt (47)
    on left: 31, on right: 25
return_stmt (48)
    on left: 32 33, on right: 26
expr (49)
    on left: 34 35, on right: 27 29 30 31 33 34 37 54 61 62
var (50)
    on left: 36 37, on right: 34 55
simple_expr (51)
    on left: 38 39, on right: 35
relop (52)
    on left: 40 41 42 43 44 45, on right: 38
additive_expr (53)
    on left: 46 47, on right: 38 39 46
addop (54)
    on left: 48 49, on right: 46
term (55)
    on left: 50 51, on right: 46 47 50
mulop (56)
    on left: 52 53, on right: 50
factor (57)
    on left: 54 55 56 57, on right: 50 51
call (58)
    on left: 58, on right: 56
args (59)
    on left: 59 60, on right: 58
arg_list (60)
    on left: 61 62, on right: 59 61
epsilon (61)
    on left: 63, on right: 19 21 60


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program    go to state 3
    decl_list  go to state 4
    decl       go to state 5
    var_decl   go to state 6
    type_spec  go to state 7
    fun_decl   go to state 8


State 1

    8 type_spec: INT .

    $default  reduce using rule 8 (type_spec)


State 2

    9 type_spec: VOID .

    $default  reduce using rule 9 (type_spec)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: decl_list .
    2 decl_list: decl_list . decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    decl       go to state 10
    var_decl   go to state 6
    type_spec  go to state 7
    fun_decl   go to state 8


State 5

    3 decl_list: decl .

    $default  reduce using rule 3 (decl_list)


State 6

    4 decl: var_decl .

    $default  reduce using rule 4 (decl)


State 7

    6 var_decl: type_spec . ID SEMI
    7         | type_spec . ID LBRAC NUM RBRAC SEMI
   10 fun_decl: type_spec . ID LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 11


State 8

    5 decl: fun_decl .

    $default  reduce using rule 5 (decl)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 decl_list: decl_list decl .

    $default  reduce using rule 2 (decl_list)


State 11

    6 var_decl: type_spec ID . SEMI
    7         | type_spec ID . LBRAC NUM RBRAC SEMI
   10 fun_decl: type_spec ID . LPAREN params RPAREN compound_stmt

    SEMI    shift, and go to state 12
    LPAREN  shift, and go to state 13
    LBRAC   shift, and go to state 14


State 12

    6 var_decl: type_spec ID SEMI .

    $default  reduce using rule 6 (var_decl)


State 13

   10 fun_decl: type_spec ID LPAREN . params RPAREN compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 15

    type_spec   go to state 16
    params      go to state 17
    param_list  go to state 18
    param       go to state 19


State 14

    7 var_decl: type_spec ID LBRAC . NUM RBRAC SEMI

    NUM  shift, and go to state 20


State 15

    9 type_spec: VOID .
   12 params: VOID .

    RPAREN    reduce using rule 12 (params)
    $default  reduce using rule 9 (type_spec)


State 16

   15 param: type_spec . ID
   16      | type_spec . ID LBRAC RBRAC

    ID  shift, and go to state 21


State 17

   10 fun_decl: type_spec ID LPAREN params . RPAREN compound_stmt

    RPAREN  shift, and go to state 22


State 18

   11 params: param_list .
   13 param_list: param_list . COMMA param

    COMMA  shift, and go to state 23

    $default  reduce using rule 11 (params)


State 19

   14 param_list: param .

    $default  reduce using rule 14 (param_list)


State 20

    7 var_decl: type_spec ID LBRAC NUM . RBRAC SEMI

    RBRAC  shift, and go to state 24


State 21

   15 param: type_spec ID .
   16      | type_spec ID . LBRAC RBRAC

    LBRAC  shift, and go to state 25

    $default  reduce using rule 15 (param)


State 22

   10 fun_decl: type_spec ID LPAREN params RPAREN . compound_stmt

    LCURL  shift, and go to state 26

    compound_stmt  go to state 27


State 23

   13 param_list: param_list COMMA . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_spec  go to state 16
    param      go to state 28


State 24

    7 var_decl: type_spec ID LBRAC NUM RBRAC . SEMI

    SEMI  shift, and go to state 29


State 25

   16 param: type_spec ID LBRAC . RBRAC

    RBRAC  shift, and go to state 30


State 26

   17 compound_stmt: LCURL . local_decl stmt_list RCURL

    $default  reduce using rule 63 (epsilon)

    local_decl  go to state 31
    epsilon     go to state 32


State 27

   10 fun_decl: type_spec ID LPAREN params RPAREN compound_stmt .

    $default  reduce using rule 10 (fun_decl)


State 28

   13 param_list: param_list COMMA param .

    $default  reduce using rule 13 (param_list)


State 29

    7 var_decl: type_spec ID LBRAC NUM RBRAC SEMI .

    $default  reduce using rule 7 (var_decl)


State 30

   16 param: type_spec ID LBRAC RBRAC .

    $default  reduce using rule 16 (param)


State 31

   17 compound_stmt: LCURL local_decl . stmt_list RCURL
   18 local_decl: local_decl . var_decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 63 (epsilon)

    var_decl   go to state 33
    type_spec  go to state 34
    stmt_list  go to state 35
    epsilon    go to state 36


State 32

   19 local_decl: epsilon .

    $default  reduce using rule 19 (local_decl)


State 33

   18 local_decl: local_decl var_decl .

    $default  reduce using rule 18 (local_decl)


State 34

    6 var_decl: type_spec . ID SEMI
    7         | type_spec . ID LBRAC NUM RBRAC SEMI

    ID  shift, and go to state 37


State 35

   17 compound_stmt: LCURL local_decl stmt_list . RCURL
   20 stmt_list: stmt_list . stmt

    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    SEMI    shift, and go to state 43
    LPAREN  shift, and go to state 44
    LCURL   shift, and go to state 26
    RCURL   shift, and go to state 45

    compound_stmt  go to state 46
    stmt           go to state 47
    expr_stmt      go to state 48
    select_stmt    go to state 49
    iter_stmt      go to state 50
    return_stmt    go to state 51
    expr           go to state 52
    var            go to state 53
    simple_expr    go to state 54
    additive_expr  go to state 55
    term           go to state 56
    factor         go to state 57
    call           go to state 58


State 36

   21 stmt_list: epsilon .

    $default  reduce using rule 21 (stmt_list)


State 37

    6 var_decl: type_spec ID . SEMI
    7         | type_spec ID . LBRAC NUM RBRAC SEMI

    SEMI   shift, and go to state 12
    LBRAC  shift, and go to state 14


State 38

   29 select_stmt: IF . LPAREN expr RPAREN stmt
   30            | IF . LPAREN expr RPAREN stmt ELSE stmt

    LPAREN  shift, and go to state 59


State 39

   32 return_stmt: RETURN . SEMI
   33            | RETURN . expr SEMI

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    SEMI    shift, and go to state 60
    LPAREN  shift, and go to state 44

    expr           go to state 61
    var            go to state 53
    simple_expr    go to state 54
    additive_expr  go to state 55
    term           go to state 56
    factor         go to state 57
    call           go to state 58


State 40

   31 iter_stmt: WHILE . LPAREN expr RPAREN stmt

    LPAREN  shift, and go to state 62


State 41

   36 var: ID .
   37    | ID . LBRAC expr RBRAC
   58 call: ID . LPAREN args RPAREN

    LPAREN  shift, and go to state 63
    LBRAC   shift, and go to state 64

    $default  reduce using rule 36 (var)


State 42

   57 factor: NUM .

    $default  reduce using rule 57 (factor)


State 43

   28 expr_stmt: SEMI .

    $default  reduce using rule 28 (expr_stmt)


State 44

   54 factor: LPAREN . expr RPAREN

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 44

    expr           go to state 65
    var            go to state 53
    simple_expr    go to state 54
    additive_expr  go to state 55
    term           go to state 56
    factor         go to state 57
    call           go to state 58


State 45

   17 compound_stmt: LCURL local_decl stmt_list RCURL .

    $default  reduce using rule 17 (compound_stmt)


State 46

   23 stmt: compound_stmt .

    $default  reduce using rule 23 (stmt)


State 47

   20 stmt_list: stmt_list stmt .

    $default  reduce using rule 20 (stmt_list)


State 48

   22 stmt: expr_stmt .

    $default  reduce using rule 22 (stmt)


State 49

   24 stmt: select_stmt .

    $default  reduce using rule 24 (stmt)


State 50

   25 stmt: iter_stmt .

    $default  reduce using rule 25 (stmt)


State 51

   26 stmt: return_stmt .

    $default  reduce using rule 26 (stmt)


State 52

   27 expr_stmt: expr . SEMI

    SEMI  shift, and go to state 66


State 53

   34 expr: var . EQ expr
   55 factor: var .

    EQ  shift, and go to state 67

    $default  reduce using rule 55 (factor)


State 54

   35 expr: simple_expr .

    $default  reduce using rule 35 (expr)


State 55

   38 simple_expr: additive_expr . relop additive_expr
   39            | additive_expr .
   46 additive_expr: additive_expr . addop term

    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    LT      shift, and go to state 70
    GT      shift, and go to state 71
    LTEQ    shift, and go to state 72
    GTEQ    shift, and go to state 73
    DOUBEQ  shift, and go to state 74
    NEQ     shift, and go to state 75

    $default  reduce using rule 39 (simple_expr)

    relop  go to state 76
    addop  go to state 77


State 56

   47 additive_expr: term .
   50 term: term . mulop factor

    MULT  shift, and go to state 78
    DIV   shift, and go to state 79

    $default  reduce using rule 47 (additive_expr)

    mulop  go to state 80


State 57

   51 term: factor .

    $default  reduce using rule 51 (term)


State 58

   56 factor: call .

    $default  reduce using rule 56 (factor)


State 59

   29 select_stmt: IF LPAREN . expr RPAREN stmt
   30            | IF LPAREN . expr RPAREN stmt ELSE stmt

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 44

    expr           go to state 81
    var            go to state 53
    simple_expr    go to state 54
    additive_expr  go to state 55
    term           go to state 56
    factor         go to state 57
    call           go to state 58


State 60

   32 return_stmt: RETURN SEMI .

    $default  reduce using rule 32 (return_stmt)


State 61

   33 return_stmt: RETURN expr . SEMI

    SEMI  shift, and go to state 82


State 62

   31 iter_stmt: WHILE LPAREN . expr RPAREN stmt

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 44

    expr           go to state 83
    var            go to state 53
    simple_expr    go to state 54
    additive_expr  go to state 55
    term           go to state 56
    factor         go to state 57
    call           go to state 58


State 63

   58 call: ID LPAREN . args RPAREN

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 44

    $default  reduce using rule 63 (epsilon)

    expr           go to state 84
    var            go to state 53
    simple_expr    go to state 54
    additive_expr  go to state 55
    term           go to state 56
    factor         go to state 57
    call           go to state 58
    args           go to state 85
    arg_list       go to state 86
    epsilon        go to state 87


State 64

   37 var: ID LBRAC . expr RBRAC

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 44

    expr           go to state 88
    var            go to state 53
    simple_expr    go to state 54
    additive_expr  go to state 55
    term           go to state 56
    factor         go to state 57
    call           go to state 58


State 65

   54 factor: LPAREN expr . RPAREN

    RPAREN  shift, and go to state 89


State 66

   27 expr_stmt: expr SEMI .

    $default  reduce using rule 27 (expr_stmt)


State 67

   34 expr: var EQ . expr

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 44

    expr           go to state 90
    var            go to state 53
    simple_expr    go to state 54
    additive_expr  go to state 55
    term           go to state 56
    factor         go to state 57
    call           go to state 58


State 68

   48 addop: PLUS .

    $default  reduce using rule 48 (addop)


State 69

   49 addop: MINUS .

    $default  reduce using rule 49 (addop)


State 70

   41 relop: LT .

    $default  reduce using rule 41 (relop)


State 71

   42 relop: GT .

    $default  reduce using rule 42 (relop)


State 72

   40 relop: LTEQ .

    $default  reduce using rule 40 (relop)


State 73

   43 relop: GTEQ .

    $default  reduce using rule 43 (relop)


State 74

   44 relop: DOUBEQ .

    $default  reduce using rule 44 (relop)


State 75

   45 relop: NEQ .

    $default  reduce using rule 45 (relop)


State 76

   38 simple_expr: additive_expr relop . additive_expr

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 44

    var            go to state 91
    additive_expr  go to state 92
    term           go to state 56
    factor         go to state 57
    call           go to state 58


State 77

   46 additive_expr: additive_expr addop . term

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 44

    var     go to state 91
    term    go to state 93
    factor  go to state 57
    call    go to state 58


State 78

   52 mulop: MULT .

    $default  reduce using rule 52 (mulop)


State 79

   53 mulop: DIV .

    $default  reduce using rule 53 (mulop)


State 80

   50 term: term mulop . factor

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 44

    var     go to state 91
    factor  go to state 94
    call    go to state 58


State 81

   29 select_stmt: IF LPAREN expr . RPAREN stmt
   30            | IF LPAREN expr . RPAREN stmt ELSE stmt

    RPAREN  shift, and go to state 95


State 82

   33 return_stmt: RETURN expr SEMI .

    $default  reduce using rule 33 (return_stmt)


State 83

   31 iter_stmt: WHILE LPAREN expr . RPAREN stmt

    RPAREN  shift, and go to state 96


State 84

   62 arg_list: expr .

    $default  reduce using rule 62 (arg_list)


State 85

   58 call: ID LPAREN args . RPAREN

    RPAREN  shift, and go to state 97


State 86

   59 args: arg_list .
   61 arg_list: arg_list . COMMA expr

    COMMA  shift, and go to state 98

    $default  reduce using rule 59 (args)


State 87

   60 args: epsilon .

    $default  reduce using rule 60 (args)


State 88

   37 var: ID LBRAC expr . RBRAC

    RBRAC  shift, and go to state 99


State 89

   54 factor: LPAREN expr RPAREN .

    $default  reduce using rule 54 (factor)


State 90

   34 expr: var EQ expr .

    $default  reduce using rule 34 (expr)


State 91

   55 factor: var .

    $default  reduce using rule 55 (factor)


State 92

   38 simple_expr: additive_expr relop additive_expr .
   46 additive_expr: additive_expr . addop term

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 38 (simple_expr)

    addop  go to state 77


State 93

   46 additive_expr: additive_expr addop term .
   50 term: term . mulop factor

    MULT  shift, and go to state 78
    DIV   shift, and go to state 79

    $default  reduce using rule 46 (additive_expr)

    mulop  go to state 80


State 94

   50 term: term mulop factor .

    $default  reduce using rule 50 (term)


State 95

   29 select_stmt: IF LPAREN expr RPAREN . stmt
   30            | IF LPAREN expr RPAREN . stmt ELSE stmt

    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    SEMI    shift, and go to state 43
    LPAREN  shift, and go to state 44
    LCURL   shift, and go to state 26

    compound_stmt  go to state 46
    stmt           go to state 100
    expr_stmt      go to state 48
    select_stmt    go to state 49
    iter_stmt      go to state 50
    return_stmt    go to state 51
    expr           go to state 52
    var            go to state 53
    simple_expr    go to state 54
    additive_expr  go to state 55
    term           go to state 56
    factor         go to state 57
    call           go to state 58


State 96

   31 iter_stmt: WHILE LPAREN expr RPAREN . stmt

    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    SEMI    shift, and go to state 43
    LPAREN  shift, and go to state 44
    LCURL   shift, and go to state 26

    compound_stmt  go to state 46
    stmt           go to state 101
    expr_stmt      go to state 48
    select_stmt    go to state 49
    iter_stmt      go to state 50
    return_stmt    go to state 51
    expr           go to state 52
    var            go to state 53
    simple_expr    go to state 54
    additive_expr  go to state 55
    term           go to state 56
    factor         go to state 57
    call           go to state 58


State 97

   58 call: ID LPAREN args RPAREN .

    $default  reduce using rule 58 (call)


State 98

   61 arg_list: arg_list COMMA . expr

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 44

    expr           go to state 102
    var            go to state 53
    simple_expr    go to state 54
    additive_expr  go to state 55
    term           go to state 56
    factor         go to state 57
    call           go to state 58


State 99

   37 var: ID LBRAC expr RBRAC .

    $default  reduce using rule 37 (var)


State 100

   29 select_stmt: IF LPAREN expr RPAREN stmt .
   30            | IF LPAREN expr RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 103

    ELSE      [reduce using rule 29 (select_stmt)]
    $default  reduce using rule 29 (select_stmt)


State 101

   31 iter_stmt: WHILE LPAREN expr RPAREN stmt .

    $default  reduce using rule 31 (iter_stmt)


State 102

   61 arg_list: arg_list COMMA expr .

    $default  reduce using rule 61 (arg_list)


State 103

   30 select_stmt: IF LPAREN expr RPAREN stmt ELSE . stmt

    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    SEMI    shift, and go to state 43
    LPAREN  shift, and go to state 44
    LCURL   shift, and go to state 26

    compound_stmt  go to state 46
    stmt           go to state 104
    expr_stmt      go to state 48
    select_stmt    go to state 49
    iter_stmt      go to state 50
    return_stmt    go to state 51
    expr           go to state 52
    var            go to state 53
    simple_expr    go to state 54
    additive_expr  go to state 55
    term           go to state 56
    factor         go to state 57
    call           go to state 58


State 104

   30 select_stmt: IF LPAREN expr RPAREN stmt ELSE stmt .

    $default  reduce using rule 30 (select_stmt)
